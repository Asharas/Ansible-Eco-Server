---
- name: Template {{ item }}.eco.ansible conf file
  ansible.builtin.template:
    src: "{{ item }}.eco.j2"
    dest: "{{ eco_rootdir }}/Configs/{{ item }}.eco.ansible"
    owner: "{{ eco_user }}"
    group: "{{ eco_group }}"
    mode: 0644
  changed_when: false

- name: Slurp new conf content
  ansible.builtin.slurp:
    src: "{{ eco_rootdir }}/Configs/{{ item }}.eco.ansible"
  register: new_conf

- name: Decode new conf content
  ansible.builtin.set_fact:
    new_conf: "{{ new_conf.content | b64decode }}"

- name: Check if {{ item }}.eco exists
  ansible.builtin.stat:
    path: "{{ eco_rootdir }}/Configs/{{ item }}.eco"
  register: conf_file

- name: Update existing file
  block:
    - name: Slurp current conf content
      ansible.builtin.slurp:
        src: "{{ eco_rootdir }}/Configs/{{ item }}.eco"
      register: current_conf

    - name: Decode current conf content
      ansible.builtin.set_fact:
        current_conf: "{{ current_conf.content | b64decode }}"

    - name: Merge new conf into current conf
      ansible.builtin.set_fact:
        current_conf: "{{ current_conf | combine(new_conf) }}"
      register: test

    - name: Write final "{{ item }}" conf to file
      ansible.builtin.copy:
        content: "{{ current_conf | to_nice_json }}"
        dest: "{{ eco_rootdir }}/Configs/{{ item }}.eco"
        owner: "{{ eco_user }}"
        group: "{{ eco_group }}"
        mode: 0644
  when: conf_file.stat.exists

- name: Create new file
  block:
    - name: Slurp default template content
      ansible.builtin.slurp:
        src: "{{ eco_rootdir }}/Configs/{{ item }}.eco.template"
      register: template_conf

    - name: Decode default template content
      ansible.builtin.set_fact:
        template_conf: "{{ template_conf.content | b64decode }}"

    - name: Merge new conf into default template conf
      ansible.builtin.set_fact:
        template_conf: "{{ template_conf | combine(new_conf) }}"

    - name: Write final "{{ item }}" conf to file
      ansible.builtin.copy:
        content: "{{ template_conf | to_nice_json }}"
        dest: "{{ eco_rootdir }}/Configs/{{ item }}.eco"
        owner: "{{ eco_user }}"
        group: "{{ eco_group }}"
        mode: 0644
  when: not conf_file.stat.exists

- name: Cleanup temp file
  ansible.builtin.file:
    path: "{{ eco_rootdir }}/Configs/{{ item }}.eco.ansible"
    state: absent
  changed_when: false
