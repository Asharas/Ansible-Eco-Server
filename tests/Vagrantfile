# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
	# General Vagrant VM configuration.
	config.vm.box = "debian/bullseye64"
	config.ssh.insert_key = true
	config.vm.synced_folder ".", "/vagrant", disabled: true
	config.vm.provider :virtualbox do |v|
		v.memory = 4096
		v.cpus = 2
		v.linked_clone = true
	end

	config.vm.define "eco" do |app|
		app.vm.hostname = "eco.localhost"
		app.vm.network :private_network, ip: "192.168.56.31"
  end

	# Ajout la clÃ© publique de l'utilisateur courant dans la VM comme root

		vagrant_root = File.dirname(__FILE__)
	  ssh_pub_key = File.readlines("#{vagrant_root}/terraform/id.pub").first.strip
	  config.vm.provision 'shell', inline: 'mkdir -p /root/.ssh'
	  config.vm.provision 'shell', inline: "echo #{ssh_pub_key} >> /root/.ssh/authorized_keys"
	  config.vm.provision 'shell', inline: "echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys", privileged: false

		# config.vm.cloud_init :user_data do |cloud_init|
		# 	cloud_init.content_type = "text/cloud-config"
		# 	cloud_init.path = "terraform/cloud-config.yml"
		# end

		config.vm.provision "ansible" do |ansible|
			ansible.raw_arguments  = ["--skip-tags=certbot,dns,ssh,backup"]
			ansible.playbook = "#{vagrant_root}/ansible/main.yml"
		end

end
